@{
    ViewData["ServerStartTime"] = System.Diagnostics.Process.GetCurrentProcess().StartTime;
    ViewData["ServerUpTime"] = DateTime.Now - System.Diagnostics.Process.GetCurrentProcess().StartTime;
}

<header>
    <div class="header-inner">
        <div class="row">
            <div class="header-left col-md-4">
                <a href="/">&laquo; Till dokumentationen</a>
            </div>
            <div class="col-md-4">
                <h2>@ViewData["Title"]</h2>
            </div>
            <div class="header-right col-md-4">
                <span>Ändringar?</span>
                <a href="/Backoffice/Update" class="primary-action">Klona från GitHub</a>
            </div>
        </div>
        <div class="clear"></div>
    </div>
</header>
<div id="content">
    <h2>Server-status</h2>
    <p>
        Servern startades
        <strong>@ViewData["ServerStartTime"]</strong>
        (uptime på @ViewData["ServerUpTime"])
    </p>
    <p>Senaste kloning från GitHub gjordes @ViewData["Now"]</p>
    <p>
        <em>
            Om ovanstående datum är 1 jan 0001 beror detta på att
            senaste <code>git clone</code> gjordes innan serverns start.
        </em>
    </p>
    <hr />
    <h2>Git-status</h2>
    <p>Följande kloner av repositoryt <code>@ViewData["RepoURL"]</code> finns på servern:</p>
    <ul>
    @foreach (System.IO.DirectoryInfo d in ViewData["Repos"] as IEnumerable<System.IO.DirectoryInfo>)
    {
        @: <li><code>@d (@d.GetFiles().Length fil(er), @d.GetDirectories().Length mapp(ar))</code></li>
    }
    </ul>
    <a href="/Backoffice/Update" class="button theme-color btn-color">Uppdatera dokumentation</a>
    <hr />
    <h2>Dokument-status</h2>
    <p>
        @if (ViewData["RootDoc"] != null)
        {
            @: Servern rapporterar att det finns behandlat innehåll.
        }
        else
        {
            @: Servern rapporterar att inget dokument-träd ännu har blivit parsat.
        }
    </p>
    <a href="/Backoffice/Read" class="button theme-color btn-color">Läs Git-repot till minnet</a>

    <ul>
        @{ 
            var root = (aurora.Document) ViewData["RootDoc"];
            foreach (var childDoc in root.Children as IEnumerable<aurora.Document>)
            {
                @:<li>
                @:  <code>@childDoc.Slug: @childDoc.Title</code>

                if (childDoc.Children != null && childDoc.Children.Count > 0)
                {
                    foreach (var childChildDoc in childDoc.Children as IEnumerable<aurora.Document>)
                    {
                        @: <ul>
                        @:   <li>
                        @:     <code>@childChildDoc.Slug: @childChildDoc.Title @childChildDoc.Body</code>
                        @:   </li>
                        @: </ul>
                    }
                }
                @:</li>
            }
        }
    </ul>

    @root.Title
    @root.Slug
    @root.Children.Count
    @root.Body
</div>