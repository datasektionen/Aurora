@{
    ViewData["ServerStartTime"] = System.Diagnostics.Process.GetCurrentProcess().StartTime;
    ViewData["ServerUpTime"] = DateTime.Now - System.Diagnostics.Process.GetCurrentProcess().StartTime;
}

<header>
    <div class="header-inner">
        <div class="row">
            <div class="header-left col-md-4">
                <a href="/">&laquo; Till dokumentationen</a>
            </div>
            <div class="col-md-4">
                <h2>@ViewData["Title"]</h2>
            </div>
            <div class="header-right col-md-4">
                <span>Ändringar?</span>
                <a href="/Backoffice/Update" class="primary-action">Klona från GitHub</a>
            </div>
        </div>
        <div class="clear"></div>
    </div>
</header>
<div id="content">
    <h2>Server-status</h2>
    <p>
        Servern startades
        <strong>@ViewData["ServerStartTime"]</strong>
        (uptime på @ViewData["ServerUpTime"])
    </p>
    <hr />
    <h2>Git-status</h2>
    <p>Följande kloner av repositoryt <code>@ViewData["RepoURL"]</code> finns på servern:</p>
    <ul>
    @foreach (System.IO.DirectoryInfo d in ViewData["Repos"] as IEnumerable<System.IO.DirectoryInfo>)
    {
        @: <li><code>@d (@d.GetFiles().Length fil(er), @d.GetDirectories().Length mapp(ar))</code></li>
    }
    </ul>
    <a href="/Backoffice/Update" class="button theme-color btn-color">Uppdatera dokumentation</a>
    <hr />
    <h2>Dokument-status</h2>
    <p>
        @if (((aurora.Document) ViewData["RootDoc"]).Children.Count > 0)
        {
            @: Servern rapporterar att det finns behandlat innehåll.
        }
        else
        {
            @: Servern rapporterar att inget dokument-träd ännu har blivit parsat.
        }
    </p>
    <ul>
        <li>
            @{ 
                var root = (aurora.Document) ViewData["RootDoc"];

                @: <code>@root.Slug:</code> <strong>@root.Title</strong>
                @: <em>(@root.Body.Length tecken)</em>
                @: <ul>

                foreach (var childDoc in root.Children as IEnumerable<aurora.Document>)
                {
                    @:<li>
                    @:  <code>@childDoc.Slug: @childDoc.Title</code>

                    if (childDoc.Children != null && childDoc.Children.Count > 0)
                    {
                        foreach (var childChildDoc in childDoc.Children as IEnumerable<aurora.Document>)
                        {
                            @: <ul>
                            @:   <li>
                            @:     <code>@childChildDoc.Slug:</code> <strong>@childChildDoc.Title</strong>
                            @:     <em>(@childChildDoc.Body.Length tecken)</em>
                            @:   </li>
                            @: </ul>
                        }
                    }
                    @:</li>
                }
            }
            </ul>
        </li>
    </ul>
</div>